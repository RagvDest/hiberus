openapi: 3.0.3
info:
  title: Employee and Department API
  description: API for managing employees and departments
  version: 1.0.0
paths:
  /employee:
    get:
      summary: Get all employees
      operationId: getEmployees
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
    post:
      summary: Create a new employee
      operationId: createEmployee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRequest'
      responses:
        '201':
          description: Employee created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
  /employees/{id}:
    get:
      summary: Get employee by ID
      operationId: getEmployeeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
    put:
      summary: Update an employee
      operationId: updateEmployee
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRequest'
      responses:
        '200':
          description: Employee updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
    delete:
      summary: Delete an employee
      operationId: deleteEmployee
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Employee deleted

  /departments:
    get:
      summary: Get all departments
      operationId: getDepartments
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Department'
    post:
      summary: Create a new department
      operationId: createDepartment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentRequest'
      responses:
        '201':
          description: Department created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
  /departments/{id}:
    get:
      summary: Get department by ID
      operationId: getDepartmentById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
    put:
      summary: Update a department
      operationId: updateDepartment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentRequest'
      responses:
        '200':
          description: Department updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
    delete:
      summary: Delete a department
      operationId: deleteDepartment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Department deleted

components:
  schemas:
    Employee:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        firstName:
          type: string
          example: "John"
        secondName:
          type: string
          example: "Doe"
        age:
          type: integer
          format: int32
          example: 30
        role:
          type: string
          example: "Developer"
        iniDate:
          type: string
          format: date
          example: "2023-01-15"
        exitDate:
          type: string
          format: time
          example: "17:30:00"
        status:
          type: string
          example: "ACTIVE"

    EmployeeRequest:
      type: object
      required:
        - firstName
        - role
        - status
      properties:
        firstName:
          type: string
          example: "John"
        secondName:
          type: string
          example: "Doe"
        age:
          type: integer
          format: int32
          example: 30
        role:
          type: string
          example: "Developer"
        iniDate:
          type: string
          format: date
          example: "2023-01-15"
        exitDate:
          type: string
          format: time
          example: "17:30:00"
        status:
          type: string
          example: "ACTIVE"

    Department:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: "IT Department"
        status:
          type: string
          example: "ACTIVE"

    DepartmentRequest:
      type: object
      required:
        - name
        - status
      properties:
        name:
          type: string
          example: "IT Department"
        status:
          type: string
          example: "ACTIVE"